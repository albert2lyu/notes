#+TITLE Android FAQ

* Building
  * 编译依赖的库文件
#+BEGIN_SRC bash
    $ sudo apt-get install git-core gnupg flex bison gperf build-essential \
  zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
  x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
  libgl1-mesa-dev g++-multilib mingw32 tofrodos uboot-mkimage
#+END_SRC
    参考: [[http://source.android.com/source/initializing.html][Android Initializing a Build Environment]]    

  * fatal error: gnu/stubs-32.h: 没有那个文件或目录        
#+BEGIN_SRC bash
sudo apt-get install libc6-dev-i386
#+END_SRC

* Kernel 编译
** 修改Makefile文件中的ARCH
#+BEGIN_SRC bash
    ARCH		?= arm
    CROSS_COMPILE	?= /usr/local/arm/arm-2009q3/bin/arm-none-linux-gnueabi-
#+END_SRC

** security/commoncap.c 出错
#+BEGIN_SRC bash
CC      security/commoncap.o
security/commoncap.c: In function 'cap_capable':
security/commoncap.c:90: error: 'AID_NET_RAW' undeclared (first use in this function)
security/commoncap.c:90: error: (Each undeclared identifier is reported only once
security/commoncap.c:90: error: for each function it appears in.)
security/commoncap.c:92: error: 'AID_NET_ADMIN' undeclared (first use in this function)
make[1]: *** [security/commoncap.o] 错误 1
make: *** [security] 错误 2
#+END_SRC
    因为没有定义CONFIG_ANDROID_PARANOID_NETWORK，需要在make menuconfig 中打开“Networking support” --> "Networking options"


* wifi
** wpa_supplicant 服务
   在init.rc文件中增加wpa_supplicant服务
#+BEGIN_SRC bash
service wpa_supplicant /system/bin/wpa_supplicant -dddd -Dwext -iwlan0 -c/system/etc/wifi/wpa_supplicant.conf
    socket wpa_wlan0 dgram 660 wifi wifi
    group system wifi inet
    disabled
    oneshot
#+END_SRC

** init: no such service 'dhcpcd_wlan0'
   在init.rc文件中增加dhcpcd_wlan0服务
#+BEGIN_SRC bash
service dhcpcd_wlan0 /system/bin/dhcpcd -o domain_name_servers -ABKL
    user root system dhcp wifi
    group root system dhcp wifi
    disabled
    oneshot
#+END_SRC


* 升级
** 取得Android最新源代码
#+BEGIN_SRC bash
You need to get the latest version of the repo tool:
curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo
You need to initialize a new repository:
repo init -u https://android.googlesource.com/platform/manifest -b android-2.3.7_r1
The full instructions are at http://source.android.com/source/downloading.html
#+END_SRC

* Frameworks
** 在状态栏中增加图标
参考文件： /frameworks/base/services/java/com/android/server/status/StatusBarPolicy.java

** Android 默认配置文件保存路径: 
#+BEGIN_SRC bash
./frameworks/base/core/res/res/values/config.xml
./frameworks/base/packages/SettingsProvider/res/values/defaults.xml
./device/samsung/smdkv210/overlay/frameworks/base
border@b0rder:/mnt/ubuntu32/work/vc1000/src/android-vc1000-2.3/device/samsung/smdkv210/overlay/frameworks/base$ tree
.
├── core
│   └── res
│       └── res
│           ├── drawable-hdpi
│           │   └── default_wallpaper.jpg
│           ├── values
│           │   └── config.xml
│           └── xml
│               └── power_profile.xml
├── packages
│   └── SettingsProvider
│       └── res
│           └── values
│               └── defaults.xml
└── tests
    └── ImfTest
        └── res
            └── values
                └── config.xml

#+END_SRC

** Camera
*** take Picture
    * ShutterButton.java调用performClick()，这个函数中调用了Camera.java中的onShutterButtonClick()
    接着的执行流程为 ----->dosnap()----->ImagePicture.onSnap()----->ImageCapture.initiate()---->ImageCapture.capture() 此函数执行完后，takepicture 过程完成
    * takePicture 完成后，surfaceChanged()将被调用将刚照下的照片显示在屏幕上。
    Camera.java中的回调接口JpegPictureCallback中的函数onPictureTaken()接着执行。这个函数先调用ImageCapture.storeImage()将jpeg图像数据存储在内存。
    * picture 的thumbnail显示过程：
    ImageCapture.storeImage()--->ImageCapture.setLastPictureThumb()---> mThumbController.setData(uri, lastPictureThumb);
    * Android -> Kernel
    device/samsung/proprietary/libcamera
    CameraHardwareSec::pictureThread() ------> SecCamera::startSnapshot(void)
#+BEGIN_SRC C++
/*
 * Devide getJpeg() as two funcs, startSnapshot() & getJpeg() because of the shutter sound timing.
 * Here, just send the capture cmd to camera ISP to start JPEG capture.
 */
int SecCamera::startSnapshot(void)
{
    LOGV("%s :", __func__);

    int ret = 0;

    LOG_TIME_DEFINE(0)
    LOG_TIME_DEFINE(1)

    if (m_cam_fd <= 0) {
        LOGE("ERR(%s):Camera was closed\n", __func__);
        return 0;
    }

    if (m_flag_camera_start > 0) {
        LOG_TIME_START(0)
        LOGW("WARN(%s):Camera was in preview, should have been stopped\n", __func__);
        stopPreview();
        LOG_TIME_END(0)
    }

    memset(&m_events_c, 0, sizeof(m_events_c));
    m_events_c.fd = m_cam_fd;
    m_events_c.events = POLLIN | POLLERR;

#if defined(LOG_NDEBUG) && LOG_NDEBUG == 0
    m_printColorFormat(m_snapshot_v4lformat, __func__);
#endif

    LOG_TIME_START(1) // prepare
    int nframe = 1;

    ret = fimc_v4l2_enum_fmt(m_cam_fd,m_snapshot_v4lformat);
    CHECK(ret);

    int v4l_pix_capture = m_snapshot_v4lformat;

    if(this->getJpegStreamPossible() == true)
        v4l_pix_capture = V4L2_PIX_FMT_JPEG;

    ret = fimc_v4l2_s_fmt(m_cam_fd, m_snapshot_width, m_snapshot_height,
                          v4l_pix_capture, 1);
    CHECK(ret);

    ret = this->m_setCameraAngle(m_cam_fd);
    CHECK(ret);

    ret = fimc_v4l2_reqbufs(m_cam_fd, V4L2_BUF_TYPE_VIDEO_CAPTURE, nframe);
    CHECK(ret);

    ret = fimc_v4l2_querybuf(m_cam_fd, &m_capture_buf, V4L2_BUF_TYPE_VIDEO_CAPTURE);
    CHECK(ret);

    ret = fimc_v4l2_qbuf(m_cam_fd, 0);
    CHECK(ret);

    ret = fimc_v4l2_streamon(m_cam_fd);
    CHECK(ret);
    LOG_TIME_END(1)

    return 0;
}
#+END_SRC


** 平台支持SIP
frameworks/base/data/etc/android.software.sip.voip.xml 复制到system/etc/permissions/.
#+BEGIN_SRC bash
device/samsung/smdkv210/device.mk
 # These are the hardware-specific features
 PRODUCT_COPY_FILES += \
        frameworks/base/data/etc/handheld_core_hardware.xml:system/etc/permissions/handheld_core_hardware.xml \
        frameworks/base/data/etc/android.software.sip.voip.xml:system/etc/permissions/android.software.sip.voip.xml \
        packages/wallpapers/LivePicker/android.software.live_wallpaper.xml:system/etc/permissions/android.software.live_wallpaper.xml

#+END_SRC
    [[http://stackoverflow.com/questions/4603465/sipmanager-newinstance-not-working-for-android-gingerbread][How to enable SIP in Android2.3 emulator]]


** external中的程序自动拷贝到/system/bin目录下面
在Android.mk中增加, 更多的环境变量参考build/core/envsetup.mk
#+BEGIN_SRC bash
LOCAL_MODULE_PATH := $(TARGET_OUT_EXECUTABLES)
#+END_SRC

** 二进制文件自启动
把源文件拷贝到frameworks/base目录下，修改 init.rc增加一个服务.
#+BEGIN_SRC bash
# Bian Jiang Add test bin
service hello  /system/bin/hello
#   oneshot
#+END_SRC

